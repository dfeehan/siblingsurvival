weights='wwgt')               # column with the respondents' sampling weights
traceback()
glimpse(ex.sib)
ex.sib$caseid[1:10]
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
rlang
?rlang
library(rlang)
update.packages('rlang')
load_all()
library(devtools)
load_all()
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
load_all()
install.packages('dplyr')
install.packages("dplyr")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
library(siblingsurvival)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
document()
library(devtools)
document()
install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(siblingsurvival)
library(tidyverse)
# be sure you have at least version 0.0.2.9000 of surveybootstrap
# run devtools::install_github('dfeehan/surveybootstrap')
# for the most recent version
library(surveybootstrap)
# this is helfpul for timing
library(tictoc)
data(ex.ego)
ex.ego
data(ex.sib)
ex.sib
ex.sib <- ex.sib %>%
mutate(in.F = as.numeric((alive==1) & (age >= 15) & (age <= 49) & (sex == 'f')))
with(ex.sib, table(in.F, useNA='ifany'))
ex.sib <- ex.sib %>% filter(! is.na(in.F))
cc <- cell_config(age.groups='5yr',
time.periods='5yr_beforeinterview',
start.obs='dob',    # date of birth
end.obs='endobs',   # either the date respondent was interviewed (if sib is alive) or date of death (if sib is dead)
event='death.date', # date of death (for sibs who died)
age.offset='dob',   # date of birth
time.offset='doi',  # date of interview
exp.scale=1/12)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
library(devtools)
document()
install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(siblingsurvival)
library(tidyverse)
# be sure you have at least version 0.0.2.9000 of surveybootstrap
# run devtools::install_github('dfeehan/surveybootstrap')
# for the most recent version
library(surveybootstrap)
# this is helfpul for timing
library(tictoc)
data(ex.ego)
ex.ego
data(ex.sib)
ex.sib
ex.sib <- ex.sib %>%
mutate(in.F = as.numeric((alive==1) & (age >= 15) & (age <= 49) & (sex == 'f')))
with(ex.sib, table(in.F, useNA='ifany'))
ex.sib <- ex.sib %>% filter(! is.na(in.F))
cc <- cell_config(age.groups='5yr',
time.periods='5yr_beforeinterview',
start.obs='dob',    # date of birth
end.obs='endobs',   # either the date respondent was interviewed (if sib is alive) or date of death (if sib is dead)
event='death.date', # date of death (for sibs who died)
age.offset='dob',   # date of birth
time.offset='doi',  # date of interview
exp.scale=1/12)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
sessionInfo()
devtools::document()
devtools::install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(siblingsurvival)
library(tidyverse)
# be sure you have at least version 0.0.2.9000 of surveybootstrap
# run devtools::install_github('dfeehan/surveybootstrap')
# for the most recent version
library(surveybootstrap)
# this is helfpul for timing
library(tictoc)
data(ex.ego)
ex.ego
data(ex.sib)
ex.sib
ex.sib <- ex.sib %>%
mutate(in.F = as.numeric((alive==1) & (age >= 15) & (age <= 49) & (sex == 'f')))
with(ex.sib, table(in.F, useNA='ifany'))
ex.sib <- ex.sib %>% filter(! is.na(in.F))
cc <- cell_config(age.groups='5yr',
time.periods='5yr_beforeinterview',
start.obs='dob',    # date of birth
end.obs='endobs',   # either the date respondent was interviewed (if sib is alive) or date of death (if sib is dead)
event='death.date', # date of death (for sibs who died)
age.offset='dob',   # date of birth
time.offset='doi',  # date of interview
exp.scale=1/12)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
debugonce('sibling_estimator')
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
load_all()
library(devtools())
library(devtools
)
load_all()
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
debugonce(sibling_estimator)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
ego.id
tmp <- sib.dat %>% mutate(.test = !!ego.id)
tmp <- sib.dat %>% mutate(.test = !!sym(ego.id))
tmp <- sib.dat %>% mutate(.test = ego.id)
glimpse(tmp)
tmp <- sib.dat %>% mutate(.test = !!!ego.id)
tmp <- sib.dat %>% mutate(.test = !!sym(ego.id))
tmp <- sib.dat %>% mutate(.test = !!!sym(ego.id))
sym
tmp <- sib.dat %>% mutate(.test = !!!enquos(ego.id))
tmp <- sib.dat %>% mutate(.test = !!!quos(ego.id))
tmp <- sib.dat %>% mutate(.test = !!!qus(ego.id))
tmp <- sib.dat %>% mutate(.test = !!!quo(ego.id))
x <- enquo(ego.id)
tmp <- sib.dat %>% mutate(.test = !!x)
tmp <- sib.dat %>% mutate(.test = .data$x)
glimpse(tmp)
tmp <- sib.dat %>% mutate(.test = .data$sib.id)
glimpse(tmp)
tmp$.test
tmp <- sib.dat %>% mutate(.test = .data[[sib.id]])
glimpse(tmp)
tmp <- enquo(sib.id)
tmp
print(tmp)
tmp <- enquos(ego.id)
tmp
test <- sib.dat %>% mutate(res = !!tmp)
glimpse(sib.dat)
enquo('sibid')
enquo(sym('sibid'))
enquo(sibid)
enquo(sym('sibid'))
?sym
sym
sym
load_all()
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
debugonce(sibling_estimator)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sib.sex',          # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
quo(tmp <- sib.dat %>% mutate(.ego.id = !!sym(ego.id)))
quo(tmp <- sib.dat %>% mutate(.ego.id = ego.id))
quo(tmp <- sib.dat %>% mutate(.ego.id = !!sym(sib.id)))
quo(tmp <- sib.dat %>% mutate(.ego.id = !!sym(sib.frame.indicator)))
quo(tmp <- sib.dat %>% mutate(.ego.id = !!sym(sib.sex)))
quo(tmp <- sib.dat %>% mutate(.ego.id = !!sym(weights)))
names(ex_ests)
glimpse(ex.sib)
document()
install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(siblingsurvival)
library(tidyverse)
# be sure you have at least version 0.0.2.9000 of surveybootstrap
# run devtools::install_github('dfeehan/surveybootstrap')
# for the most recent version
library(surveybootstrap)
# this is helfpul for timing
library(tictoc)
data(ex.ego)
ex.ego
data(ex.sib)
ex.sib
ex.sib <- ex.sib %>%
mutate(in.F = as.numeric((alive==1) & (age >= 15) & (age <= 49) & (sex == 'f')))
with(ex.sib, table(in.F, useNA='ifany'))
ex.sib <- ex.sib %>% filter(! is.na(in.F))
cc <- cell_config(age.groups='5yr',
time.periods='5yr_beforeinterview',
start.obs='dob',    # date of birth
end.obs='endobs',   # either the date respondent was interviewed (if sib is alive) or date of death (if sib is dead)
event='death.date', # date of death (for sibs who died)
age.offset='dob',   # date of birth
time.offset='doi',  # date of interview
exp.scale=1/12)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sex',              # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
document()
library(devtolls); document(); install()
library(devtools); document(); install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(siblingsurvival)
library(tidyverse)
# be sure you have at least version 0.0.2.9000 of surveybootstrap
# run devtools::install_github('dfeehan/surveybootstrap')
# for the most recent version
library(surveybootstrap)
# this is helfpul for timing
library(tictoc)
data(ex.ego)
ex.ego
data(ex.sib)
ex.sib
ex.sib <- ex.sib %>%
mutate(in.F = as.numeric((alive==1) & (age >= 15) & (age <= 49) & (sex == 'f')))
with(ex.sib, table(in.F, useNA='ifany'))
ex.sib <- ex.sib %>% filter(! is.na(in.F))
cc <- cell_config(age.groups='5yr',
time.periods='5yr_beforeinterview',
start.obs='dob',    # date of birth
end.obs='endobs',   # either the date respondent was interviewed (if sib is alive) or date of death (if sib is dead)
event='death.date', # date of death (for sibs who died)
age.offset='dob',   # date of birth
time.offset='doi',  # date of interview
exp.scale=1/12)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sex',              # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
debugonce(sibling_estimator)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sex',              # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
quo(tmp <- sib.dat %>% mutate(.ego.id = !!sym(ego.id)))
sib.dat$caseid[1:10]
tmp <- sib.dat %>% mutate(.ego.id= !!sym(ego.id))
tmp <- sib.dat %>% mutate(.ego.id= !!dplyr::sym(ego.id))
tmp <- sib.dat %>% mutate(.ego.id= !!rlang::sym(ego.id))
tmp <- sib.dat %>% mutate(.ego.id= !!sym(ego.id))
sym(ego.id)
tmp <- sib.dat %>% mutate(.ego.id= !sym(ego.id))
tmp <- sib.dat %>% mutate(.ego.id=caseid)
tmp <- sib.dat %>% mutate(.ego.id = !!sym(ego.id))
!!sym(ego.id)
sym(ego.id)
tmpid <- enquo(ego.id)
tmp <- sib.dat %>% mutate(.tmp = !!tmpid)
update.packages()
install.packages('mclust')
install.packages('mclust')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(siblingsurvival)
library(tidyverse)
# be sure you have at least version 0.0.2.9000 of surveybootstrap
# run devtools::install_github('dfeehan/surveybootstrap')
# for the most recent version
library(surveybootstrap)
# this is helfpul for timing
library(tictoc)
data(ex.ego)
ex.ego
data(ex.sib)
ex.sib
ex.sib <- ex.sib %>%
mutate(in.F = as.numeric((alive==1) & (age >= 15) & (age <= 49) & (sex == 'f')))
with(ex.sib, table(in.F, useNA='ifany'))
ex.sib <- ex.sib %>% filter(! is.na(in.F))
cc <- cell_config(age.groups='5yr',
time.periods='5yr_beforeinterview',
start.obs='dob',    # date of birth
end.obs='endobs',   # either the date respondent was interviewed (if sib is alive) or date of death (if sib is dead)
event='death.date', # date of death (for sibs who died)
age.offset='dob',   # date of birth
time.offset='doi',  # date of interview
exp.scale=1/12)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sex',              # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
glimpse(ex.sib)
tmp <- ex.sib %>% mutate(.ego.id=ego.id)
glimpse(ex.sib)
tmp <- ex.sib %>% mutate(.ego.id=caseid)
glimpse(tmp)
load_all()
library(devtools)
load_all()
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sex',              # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
?enquo
load_all()
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sex',              # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
?mutate
mutate
load_all()
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sex',              # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
mutate
dplyr::mutate
document()
load_all()
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sex',              # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
names(ex_ests)
document()
install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(siblingsurvival)
library(tidyverse)
# be sure you have at least version 0.0.2.9000 of surveybootstrap
# run devtools::install_github('dfeehan/surveybootstrap')
# for the most recent version
library(surveybootstrap)
# this is helfpul for timing
library(tictoc)
data(ex.ego)
ex.ego
data(ex.sib)
ex.sib
ex.sib <- ex.sib %>%
mutate(in.F = as.numeric((alive==1) & (age >= 15) & (age <= 49) & (sex == 'f')))
with(ex.sib, table(in.F, useNA='ifany'))
ex.sib <- ex.sib %>% filter(! is.na(in.F))
cc <- cell_config(age.groups='5yr',
time.periods='5yr_beforeinterview',
start.obs='dob',    # date of birth
end.obs='endobs',   # either the date respondent was interviewed (if sib is alive) or date of death (if sib is dead)
event='death.date', # date of death (for sibs who died)
age.offset='dob',   # date of birth
time.offset='doi',  # date of interview
exp.scale=1/12)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sex',              # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
document()
library(devtools)
document()
install()
document()
install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(siblingsurvival)
library(tidyverse)
# be sure you have at least version 0.0.2.9000 of surveybootstrap
# run devtools::install_github('dfeehan/surveybootstrap')
# for the most recent version
library(surveybootstrap)
# this is helfpul for timing
library(tictoc)
data(ex.ego)
ex.ego
data(ex.sib)
ex.sib
ex.sib <- ex.sib %>%
mutate(in.F = as.numeric((alive==1) & (age >= 15) & (age <= 49) & (sex == 'f')))
with(ex.sib, table(in.F, useNA='ifany'))
ex.sib <- ex.sib %>% filter(! is.na(in.F))
cc <- cell_config(age.groups='5yr',
time.periods='5yr_beforeinterview',
start.obs='dob',    # date of birth
end.obs='endobs',   # either the date respondent was interviewed (if sib is alive) or date of death (if sib is dead)
event='death.date', # date of death (for sibs who died)
age.offset='dob',   # date of birth
time.offset='doi',  # date of interview
exp.scale=1/12)
ex_ests <- sibling_estimator(sib.dat = ex.sib,
ego.id = 'caseid',            # column with the respondent id
sib.id = 'sibid',             # column with sibling id (unique for each reported sibling)
sib.frame.indicator = 'in.F', # indicator for sibling frame population membership
sib.sex = 'sex',              # column with sibling's sex
cell.config=cc,               # cell configuration we created above
weights='wwgt')               # column with the respondents' sampling weights
document()
library(devtools)
install()
