// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// window_intersect
NumericVector window_intersect(NumericVector a, NumericVector b);
RcppExport SEXP _siblingsurvival_window_intersect(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(window_intersect(a, b));
    return rcpp_result_gen;
END_RCPP
}
// cpp_compute_occ_exp
List cpp_compute_occ_exp(NumericMatrix lambda, NumericMatrix alpha, NumericVector alpha_offset, NumericMatrix tau);
RcppExport SEXP _siblingsurvival_cpp_compute_occ_exp(SEXP lambdaSEXP, SEXP alphaSEXP, SEXP alpha_offsetSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha_offset(alpha_offsetSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_compute_occ_exp(lambda, alpha, alpha_offset, tau));
    return rcpp_result_gen;
END_RCPP
}
// cpp_compute_occ_exp2
List cpp_compute_occ_exp2(NumericMatrix lambda, NumericMatrix alpha, NumericVector alpha_offset, NumericMatrix tau, double thresh);
RcppExport SEXP _siblingsurvival_cpp_compute_occ_exp2(SEXP lambdaSEXP, SEXP alphaSEXP, SEXP alpha_offsetSEXP, SEXP tauSEXP, SEXP threshSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha_offset(alpha_offsetSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type thresh(threshSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_compute_occ_exp2(lambda, alpha, alpha_offset, tau, thresh));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_siblingsurvival_window_intersect", (DL_FUNC) &_siblingsurvival_window_intersect, 2},
    {"_siblingsurvival_cpp_compute_occ_exp", (DL_FUNC) &_siblingsurvival_cpp_compute_occ_exp, 4},
    {"_siblingsurvival_cpp_compute_occ_exp2", (DL_FUNC) &_siblingsurvival_cpp_compute_occ_exp2, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_siblingsurvival(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
